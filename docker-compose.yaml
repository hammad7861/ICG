services:
  website:
    build:
      context: ./website
      dockerfile: Dockerfile
    ports:
      - "8081:80" # Nginx will serve the CRA app here
    networks:
      - app-network
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://nginx:80"]
      interval: 10s
      timeout: 5s
      retries: 3

  dashboard:
    build:
      context: ./dashboard
      dockerfile: Dockerfile
      args:
        VITE_TARGETED_URL: "/api"
    environment:
      VITE_TARGETED_URL: "/api"
    ports:
      - "8080:80" # Nginx will serve the Vite app here
    networks:
      - app-network
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://nginx:80/dashboard"]
      interval: 10s
      timeout: 5s
      retries: 3

  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: "mongodb://admin:password@mongodb:27017/ICG?authSource=admin"
      JWT_KEY: "supersecretkey"
      APP_PORT: 3000
      NODE_ENV: "production"
    ports:
      - "3000:3000"
    volumes:
      - ./server:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - app-network
    depends_on:
      - mongodb

  mongodb:
    image: mongo:latest
    container_name: ICGmongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - mongodb-data:/data/db
    networks:
      - app-network
    ports:
      - "27017:27017"

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "8083:80" # Nginx serves the frontends and proxies API requests
    networks:
      - app-network
    depends_on:
      website:
        condition: service_healthy
      dashboard:
        condition: service_healthy
      backend:
        condition: service_started
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d # Nginx config directory for custom conf
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:80"]
      interval: 10s
      timeout: 5s
      retries: 3

networks:
  app-network:
    driver: bridge

volumes:
  mongodb-data:
    driver: local
